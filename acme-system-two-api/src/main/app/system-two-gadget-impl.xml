<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation=
              "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
">
    <flow name="system-two-gadget-impl.update">
        <logger level="INFO" message="SystemTwo - Updating Gadget #[flowVars['id']]"/>

        <set-variable variableName="_requestMappingScriptName" value="mappings/system-two-update-request.dw"/>
        <set-variable variableName="_responseMappingScriptName" value="common/mappings/SystemAPIResponse.dw"/>

        <flow-ref name="system-two-gadget-impl.callSystemTwo"/>
    </flow>

    <flow name="system-two-gadget-impl.create">
        <logger level="INFO" message="SystemTwo - Creating new Gadget"/>

        <set-variable variableName="_requestMappingScriptName" value="mappings/system-two-create-request.dw"/>
        <set-variable variableName="_responseMappingScriptName" value="common/mappings/SystemAPIResponse.dw"/>

        <flow-ref name="system-two-gadget-impl.callSystemTwo"/>
    </flow>

    <flow name="system-two-gadget-impl.callSystemTwo">
        <enricher target="#[flowVars['requestMappingScript']]">
            <custom-transformer class="com.mulesoft.demo.util.DynamicParseTemplateTransformer">
                <spring:property name="location" value="#[flowVars['_requestMappingScriptName']]"/>
            </custom-transformer>
        </enricher>

        <enricher target="#[flowVars['responseMappingScript']]">
            <custom-transformer class="com.mulesoft.demo.util.DynamicParseTemplateTransformer">
                <spring:property name="location" value="#[flowVars['_responseMappingScriptName']]"/>
            </custom-transformer>
        </enricher>

        <set-payload value="#[dw(flowVars['requestMappingScript'], 'application/json')]" mimeType="application/json"/>

        <!-- This code simulates call to the underlying SystemTwo which returns the ID of the gadget -->
        <set-payload value="#[java.util.UUID.randomUUID().toString()]"/>
        <!-- This code simulates call to the underlying SystemTwo which returns the ID of the gadget  -->

        <set-payload value="#[dw(flowVars['responseMappingScript'], 'application/json')]" mimeType="application/json"/>
    </flow>

</mule>